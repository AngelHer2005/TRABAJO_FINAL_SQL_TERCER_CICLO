-- CREAMOS LA BASE DE DATOS:	
	
CREATE DATABASE SUPERMERCADO
GO
USE SUPERMERCADO
GO

--CREAMOS LAS TABLAS:

CREATE TABLE CATEGORIA(
COD_CAT CHAR(5) PRIMARY KEY CHECK(COD_CAT LIKE 'CT[0-9][0-9][0-9]'),
NOMBRE VARCHAR(40) UNIQUE NOT NULL
)

CREATE TABLE PRODUCTO(
ID_PRODUCTO CHAR(4) PRIMARY KEY CHECK(ID_PRODUCTO LIKE 'P[0-9][0-9][0-9]'),
NOMBRE VARCHAR(30) NOT NULL,
DESCRIPCIÓN VARCHAR(MAX) NOT NULL,
PRECIO_VENTA MONEY NOT NULL,
FECHA_VENC DATE NOT NULL,
COD_CAT CHAR(5) NOT NULL FOREIGN KEY(COD_CAT) REFERENCES CATEGORIA(COD_CAT)
)

CREATE TABLE STOCK(
ID_STOCK CHAR(4) PRIMARY KEY CHECK(ID_STOCK LIKE 'S[0-9][0-9][0-9]'),
ID_PRODUCTO CHAR(4) NOT NULL FOREIGN KEY(ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO),
STOCK_MÍNIMO INT NULL,
STOCK_ACTUAL INT NULL
)

CREATE TABLE DISTRITO(
ID_DISTRITO CHAR(4) PRIMARY KEY CHECK(ID_DISTRITO LIKE 'D[0-9][0-9][0-9]'),
NOMBRE_DISTRITO VARCHAR(20) NOT NULL UNIQUE
)

CREATE TABLE CARGO(
COD_CARGO CHAR(5) PRIMARY KEY CHECK(COD_CARGO LIKE 'CA[0-9][0-9][0-9]'),
NOMBRE_CARGO VARCHAR(20) NOT NULL UNIQUE
)

CREATE TABLE CLIENTE(
ID_CLIENTE CHAR(4) PRIMARY KEY CHECK(ID_CLIENTE LIKE 'C[0-9][0-9][0-9]'),
NOMBRE VARCHAR(40) NOT NULL,
APELLIDO VARCHAR(40) NOT NULL,
DIRECCIÓN VARCHAR(50) UNIQUE NOT NULL,
TELÉFONO CHAR(9) UNIQUE NOT NULL CHECK(TELÉFONO LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'),
ID_DISTRITO CHAR(4) NOT NULL FOREIGN KEY(ID_DISTRITO) REFERENCES DISTRITO(ID_DISTRITO),
EMAIL VARCHAR(50) UNIQUE NOT NULL
)

CREATE TABLE ESTADO_CIV(
ID_ESTADO_CIV CHAR(5) PRIMARY KEY CHECK(ID_ESTADO_CIV LIKE 'ES[0-9][0-9][0-9]'),
TIPO_ESTADO VARCHAR(40) NOT NULL UNIQUE
)

CREATE TABLE NIVEL_EDU(
ID_NIVEL_EDU CHAR(5) PRIMARY KEY CHECK(ID_NIVEL_EDU LIKE 'NE[0-9][0-9][0-9]'),
NIVEL_EDU VARCHAR(30) NOT NULL UNIQUE
)

CREATE TABLE EMPLEADO(
COD_EMPLE CHAR(4) PRIMARY KEY CHECK(COD_EMPLE LIKE 'E[0-9][0-9][0-9]'),
NOMBRE VARCHAR(40) NOT NULL,
APELLIDO VARCHAR(40) NOT NULL,
DNI CHAR(8) UNIQUE NOT NULL CHECK(DNI LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'),
DIRECCIÓN VARCHAR(50) UNIQUE NOT NULL,
TELÉFONO CHAR(9) UNIQUE NOT NULL CHECK(TELÉFONO LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'),
EMAIL VARCHAR(50) UNIQUE NOT NULL,
SUELDO_BÁSICO MONEY NOT NULL,
FECHA_INGRESO DATE DEFAULT(GETDATE()) NOT NULL,
ID_DISTRITO CHAR(4) NOT NULL FOREIGN KEY(ID_DISTRITO) REFERENCES DISTRITO(ID_DISTRITO),
COD_CARGO CHAR(5) NOT NULL FOREIGN KEY(COD_CARGO) REFERENCES CARGO(COD_CARGO),
ID_ESTADO_CIV CHAR(5) NOT NULL FOREIGN KEY(ID_ESTADO_CIV) REFERENCES ESTADO_CIV(ID_ESTADO_CIV),
ID_NIVEL_EDU CHAR(5) NOT NULL FOREIGN KEY(ID_NIVEL_EDU) REFERENCES NIVEL_EDU(ID_NIVEL_EDU)
)

CREATE TABLE BOLETA(
NUM_BOLETA CHAR(4) PRIMARY KEY CHECK(NUM_BOLETA LIKE 'B[0-9][0-9][0-9]'),
FECHA_EMI DATE DEFAULT(GETDATE()) NOT NULL,
ID_CLIENTE CHAR(4) NOT NULL FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE),
COD_EMPLE CHAR(4) NOT NULL FOREIGN KEY(COD_EMPLE) REFERENCES EMPLEADO(COD_EMPLE)
)

CREATE TABLE DETALLE_BOLETA(
NUM_DET_BOL CHAR(5) PRIMARY KEY CHECK(NUM_DET_BOL LIKE 'DB[0-9][0-9][0-9]'),
NUM_BOLETA CHAR(4) NOT NULL FOREIGN KEY(NUM_BOLETA) REFERENCES BOLETA(NUM_BOLETA),
IMPORTE MONEY NOT NULL
)

CREATE TABLE PRODUCTO_BOLETA(
ID_PB CHAR(5) PRIMARY KEY CHECK(ID_PB LIKE 'PB[0-9][0-9][0-9]'),
ID_PRODUCTO CHAR(4) NOT NULL FOREIGN KEY(ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO),
CANTIDAD INT NOT NULL,	
PRECIO_TOT MONEY NOT NULL,
ID_DET_BOL CHAR(5) NOT NULL FOREIGN KEY(ID_DET_BOL) REFERENCES DETALLE_BOLETA(NUM_DET_BOL),
)


CREATE TABLE ESTADO_BOLETA(
ID_ESTADO CHAR(5) PRIMARY KEY CHECK(ID_ESTADO LIKE 'EB[0-9][0-9][0-9]'),
ESTADO_BOLETA VARCHAR(20) NOT NULL,
)

CREATE TABLE UNION_BOLETA_ESTADO_BOL(
NUM_BOLETA CHAR(4) UNIQUE NOT NULL FOREIGN KEY(NUM_BOLETA) REFERENCES BOLETA(NUM_BOLETA),
ID_ESTADO CHAR(5) NOT NULL FOREIGN KEY(ID_ESTADO) REFERENCES ESTADO_BOLETA(ID_ESTADO)
)


--INSERTAMOS REGISTROS A LAS TABLAS

INSERT INTO CATEGORIA VALUES('CT001','LÁCTEOS'),
							('CT002','CARNES'),
							('CT003','GRANOS'),
							('CT004','VERDURAS'),
							('CT005','FRUTAS')

INSERT INTO PRODUCTO VALUES('P001', 'Leche', 'Líquido blanco producido por las glándulas mamarias de la vaca utilizado como alimento y fuente de nutrientes.', 16.00, '2024-03-26', 'CT001'),
						   ('P002', 'Queso', 'Producto lácteo sólido o semisólido obtenido por coagulación de la leche, seguida de un proceso de fermentación y maduración.', 5.00, '2024-08-01', 'CT001'),
						   ('P003', 'Pollo', 'Carne de ave de corral, generalmente blanca y tierna, que se consume ampliamente en todo el mundo.', 20.00, '2024-03-11', 'CT002'),
						   ('P004', 'Atún', 'Pez marino de gran tamaño, de cuerpo alargado y esbelto, muy apreciado en la gastronomía por su carne sabrosa.', 4.50, '2026-03-09', 'CT002'),
						   ('P005', 'Arroz', 'Cereal cultivado en muchas partes del mundo, cuyos granos son la base de la alimentación en muchas culturas, especialmente en Asia.',3.40, '2024-03-26', 'CT003')



INSERT INTO STOCK VALUES('S001','P001', 6, 12),
						('S002','P002', 5, 15),
						('S003','P003', 4, 8),
						('S004', 'P004', 30, 35),
						('S005', 'P005', 10, 20)

INSERT INTO DISTRITO VALUES('D001', 'ATE'),
						   ('D002','CALLAO'),
						   ('D003','PUCUSANA'),
						   ('D004','RÍMAC'),
						   ('D005','CHACLAYO')

INSERT INTO CARGO VALUES('CA001', 'GERENTE'),
						('CA002','VENDEDOR'),
						('CA003','CAJERO'),
						('CA004','REPONEDOR'),
						('CA005','ALMACENERO')

INSERT INTO CLIENTE VALUES('C001','Ángel','Patricio Arroyo', 'Res. Aeropuerto Calle Júpiter #255', '997152261', 'D002', 'angelhernanpatricioarroyo@gmail.com'),
						  ('C002','Jared','Galindo Davila', 'Calle Apúrimac #425', '943214215','D004','jaredgalindo2024@gmail.com'),
						  ('C003','Fabiano','Belladoni Portal', 'Av. Gorrión #155', '994215123','D003', 'fabianobelladonii@gmail.com'),
						  ('C004', 'Stive', 'Hinostroza Chavez', 'Res. Aeropuerto Calle Saturno #302', '990421523', 'D002', 'stivehinos@hotmail.com'),
						  ('C005', 'Mauricio', 'Luque Mendoza', 'Calle Sierra #412', '900241342', 'D005', 'mauriluque@hotmail.com')

INSERT INTO ESTADO_CIV VALUES('ES001','CASADO/A'),
							 ('ES002','VIUDO/A'),
							 ('ES003','SOLTERO/A'),
							 ('ES004','DIVORCIADO/A'),
							 ('ES005','CONVIVIENTE')

INSERT INTO NIVEL_EDU VALUES('NE001', 'PRIMARIA'),
							('NE002', 'SECUNDARIA'),
							('NE003', 'TÉCNICO O VOCACIONAL'),
							('NE004', 'UNIVERSIDAD O SUPERIOR'),
							('NE005', 'POSGRADO')

INSERT INTO EMPLEADO VALUES('E001', 'Juan', 'Pérez', '84321952', 'Calle Junín #133', '942151248', 'juanperez@gmail.com', 1000.00, GETDATE(), 'D001', 'CA003', 'ES001', 'NE004'),
						   ('E002', 'María', 'López', '87654421', 'Av. Plaza Mayor #415', '912446679', 'maria.lopez@gmail.com', 1200.00, GETDATE()+62, 'D002', 'CA004', 'ES002', 'NE005'),
						   ('E003', 'Pedro', 'García', '59213841', 'Calle Faucett #512', '912345231', 'pedrogarcia@gmail.com', 1100.00, GETDATE()+24, 'D001', 'CA003','ES001', 'NE004'),
						   ('E004', 'Ana', 'Martínez', '59214151', 'Calle Leo #210', '916245681', 'anamartinez@gmail.com', 1050.00, GETDATE()-63, 'D003', 'CA003', 'ES003', 'NE005'),
						   ('E005', 'Carlos', 'Rodríguez', '32141532', 'Calle Sol #32', '912340022', 'carlosrodriguez@gmail.com', 2300.00, GETDATE()-242, 'D002', 'CA001', 'ES001', 'NE004')

INSERT INTO BOLETA VALUES('B001',GETDATE(),'C003','E001'),
						 ('B002',GETDATE()+3,'C002','E003'),
						 ('B003',GETDATE()+14,'C001','E004'),
						 ('B004',GETDATE(),'C004','E003'),
						 ('B005',GETDATE()+2,'C005','E001')

INSERT INTO DETALLE_BOLETA VALUES('DB001','B001', 47.10),
								 ('DB002','B002',23.50),
								 ('DB003','B003',37.00),
								 ('DB004','B004',15.00),
								 ('DB005','B005',5.00)


INSERT INTO PRODUCTO_BOLETA VALUES('PB001','P005', 3, 9.60, 'DB001'),
								  ('PB002','P001', 2, 32.00, 'DB003'),
								  ('PB003','P002', 3, 15.00, 'DB001'),
								  ('PB004','P004', 5, 22.50, 'DB001'),
								  ('PB005', 'P002', 1, 5.00, 'DB003')
						   
INSERT INTO ESTADO_BOLETA VALUES('EB001', 'PAGADA'),
								('EB002', 'EMITIDA'),
								('EB003', 'AUSENTE'),
								('EB004', 'ANULADA'),
								('EB005', 'EN PROCESO')

INSERT INTO UNION_BOLETA_ESTADO_BOL VALUES('B001','EB001'),
										  ('B002','EB001'),
										  ('B003','EB001'),
										  ('B004','EB004'),
										  ('B005','EB002')


-- CONSULTAS:
-- CONSULTAS CON CONDICIONALES
/*
1. SI EL PRODUCTO ARROZ ES MAYOR A 3 SOLES, MUÉSTRALO, SINO NO.
*/
DECLARE @PRODUCTO VARCHAR(30), @PRECIO MONEY, @MSJ VARCHAR(40)
SELECT @PRECIO= PRECIO_VENTA FROM PRODUCTO WHERE NOMBRE = 'Arroz'
IF @PRECIO > 3
	BEGIN
		SET @MSJ = 'ES MAYOR DE 3 SOLES.'
	END
ELSE
	BEGIN
		SET @MSJ = 'NO ES MAYOR DE 3 SOLES.'
	END
	PRINT CONCAT('EL ARROZ ', LTRIM(@MSJ))
GO
/*
2. VERIFICAREMOS SI EL ESTADO DE LA BOLETA DEL CLIENTE 'Ángel' ES 'PAGADA'
*/
DECLARE @ESTADO VARCHAR(6), @MSJ VARCHAR(40)
SELECT @ESTADO=E.ESTADO_BOLETA 
	   FROM BOLETA B
	   INNER JOIN UNION_BOLETA_ESTADO_BOL UBE ON UBE.NUM_BOLETA = B.NUM_BOLETA 
	   INNER JOIN ESTADO_BOLETA E ON E.ID_ESTADO = UBE.ID_ESTADO
	   INNER JOIN CLIENTE C ON C.ID_CLIENTE = B.ID_CLIENTE
	   WHERE C.NOMBRE = 'Ángel'

IF @ESTADO = 'PAGADA'
	BEGIN
		SET @MSJ = 'EL CLIENTE ÁNGEL SI PAGÓ LA BOLETA.'
	END
ELSE
	BEGIN
		SET @MSJ = 'EL CLIENTE ÁNGEL NO PAGÓ LA BOLETA.'
	END
	PRINT @MSJ
GO

--VIEWS
/*
1. QUE CARGO TIENE CADA EMPLEADO
*/
SELECT       dbo.EMPLEADO.NOMBRE, dbo.CARGO.NOMBRE_CARGO
FROM            dbo.CARGO INNER JOIN
                         dbo.EMPLEADO ON dbo.CARGO.COD_CARGO = dbo.EMPLEADO.COD_CARGO

/*
2. A QUE CATEGORÍA PERTENECE CADA PRODUCTO
*/
SELECT       dbo.PRODUCTO.NOMBRE, dbo.CATEGORIA.NOMBRE AS Expr1
FROM            dbo.CATEGORIA INNER JOIN
                         dbo.PRODUCTO ON dbo.CATEGORIA.COD_CAT = dbo.PRODUCTO.COD_CAT


--AGRUPAMIENTO
/*
1. ESTA CONSULTA MOSTRARÁ EL NOMBRE DEL CLIENTE, QUE EMPLEADO LO ATENDIÓ (CON SU CARGO),
   EL PRECIO TOTAL QUE PAGÓ EN LA BOLETA Y EL ESTADO DE LA BOLETA
*/
SELECT C.NOMBRE AS 'NOMBRE CLIENTE',
	   E.NOMBRE AS 'NOMBRE EMPLEADO',
	   CA.NOMBRE_CARGO AS 'CARGO EMPLEADO',
	   B.NUM_BOLETA AS 'NÚMERO BOLETA',
	   CONCAT('S/. ',DB.IMPORTE) AS 'IMPORTE BOLETA',
	   EB.ESTADO_BOLETA AS 'ESTADO BOLETA'
	   FROM BOLETA B
INNER JOIN CLIENTE C ON C.ID_CLIENTE = B.ID_CLIENTE
INNER JOIN EMPLEADO E ON E.COD_EMPLE = B.COD_EMPLE
INNER JOIN CARGO CA ON CA.COD_CARGO = E.COD_CARGO
INNER JOIN DETALLE_BOLETA DB ON DB.NUM_BOLETA = B.NUM_BOLETA
INNER JOIN UNION_BOLETA_ESTADO_BOL UBE ON UBE.NUM_BOLETA = B.NUM_BOLETA
INNER JOIN ESTADO_BOLETA EB ON EB.ID_ESTADO = UBE.ID_ESTADO

/*
2. ESTA CONSULTA MOSTRARÁ QUE NIVEL EDUCACIONAL, QUE DISTRITO Y 
   QUE ESTADO CIVIL TIENE CADA EMPLEADO.
*/
SELECT E.NOMBRE AS 'NOMBRE EMPLEADO',
	   D.NOMBRE_DISTRITO AS 'DISTRITO',
	   NE.NIVEL_EDU AS 'NIVEL EDUCACIONAL',
	   ES.TIPO_ESTADO AS 'ESTADO CIVIL'
	   FROM EMPLEADO E
INNER JOIN DISTRITO D ON D.ID_DISTRITO = E.ID_DISTRITO
INNER JOIN NIVEL_EDU NE ON NE.ID_NIVEL_EDU = E.ID_NIVEL_EDU
INNER JOIN ESTADO_CIV ES ON ES.ID_ESTADO_CIV = E.ID_ESTADO_CIV
GO

--FUNCIONES
/*
1. HAREMOS UNA FUNCIÓN ESCALAR QUE NOS MUESTRE EL NOMBRE DEL PRODUCTO CUYO 
   IDENTIFICADOR ES P003, SU CATEGORÍA, SU STOCK MÍNIMO Y ACTUAL.
*/
CREATE FUNCTION DBO.DATOS_STOCK() RETURNS VARCHAR(MAX)
AS
	BEGIN
		DECLARE @DATOS VARCHAR(MAX), @EXTRA VARCHAR(30)
		SELECT @EXTRA = UPPER(NOMBRE) FROM PRODUCTO WHERE ID_PRODUCTO = 'P003'
		SET @DATOS = @EXTRA
		SELECT @EXTRA = UPPER(C.NOMBRE) FROM PRODUCTO P INNER JOIN CATEGORIA C ON C.COD_CAT = P.COD_CAT WHERE ID_PRODUCTO = 'P003'
		SET @DATOS = CONCAT(@DATOS, ', DE CATEGORÍA ',@EXTRA)
		SELECT @EXTRA = STR(S.STOCK_MÍNIMO) FROM PRODUCTO P INNER JOIN STOCK S ON S.ID_PRODUCTO = P.ID_PRODUCTO WHERE P.ID_PRODUCTO = 'P003'
		SET @DATOS = CONCAT(@DATOS, ', UN STOCK MÍNIMO DE ',LTRIM(@EXTRA))
		SELECT @EXTRA = STR(S.STOCK_ACTUAL) FROM PRODUCTO P INNER JOIN STOCK S ON S.ID_PRODUCTO = P.ID_PRODUCTO WHERE P.ID_PRODUCTO = 'P003'
		SET @DATOS = CONCAT(@DATOS, ' Y UN STOCK ACTUAL DE ',LTRIM(@EXTRA), '.')
		RETURN @DATOS
	END
GO
PRINT 'EL PRODUCTO CON IDENTIFICADOR P003 ES EL '+ DBO.DATOS_STOCK()
GO

/*
2. HAREMOS UNA FUNCIÓN DE TABLA QUE UNA A LA TABLA PRODUCTOS CON CATEGORÍA
   PARA PODER MOSTRAR EL IDENTIFICADOR DEL PRODUCTO, SU NOMBRE, SU CATEGORÍA Y SU PRECIO.
*/
CREATE FUNCTION F_PRODUCTO()
RETURNS TABLE
AS 
	RETURN (SELECT P.ID_PRODUCTO AS 'NÚMERO PRODUCTO',
				   P.NOMBRE AS 'NOMBRE PRODUCTO',
				   C.NOMBRE AS 'CATEGORÍA',
				   P.PRECIO_VENTA AS 'PRECIO'
				   FROM PRODUCTO P INNER JOIN CATEGORIA C ON C.COD_CAT = P.COD_CAT)
GO
SELECT [NÚMERO PRODUCTO], [NOMBRE PRODUCTO], CATEGORÍA, CONCAT('S/. ', PRECIO) AS PRECIO FROM F_PRODUCTO() WHERE PRECIO > 5.00
GO
DROP FUNCTION F_PRODUCTO

-- ACCEDEMOS A LAS DIAGRAMAS DE BASE DE DATOS:
ALTER AUTHORIZATION ON DATABASE::SUPERMERCADO TO sa